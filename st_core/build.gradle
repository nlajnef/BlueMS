/*
 * Copyright (c) 2022(-0001) STMicroelectronics.
 * All rights reserved.
 * This software is licensed under terms that can be found in the LICENSE file in
 * the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 */
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "io.gitlab.arturbosch.detekt" version "$detekt_version"
    id "org.jlleitschuh.gradle.ktlint" version "$ktlint_version"
    id 'com.google.devtools.ksp'
}

apply from: file('publish.gradle')

android {
    namespace 'com.st.core'
    compileSdk rootProject.compileSdk

    defaultConfig {
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        getByName("release") {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }


    ksp {
        arg("room.schemaLocation", "$projectDir/schemas")
    }
}

detekt {
    config = files("../detekt-config-compose.yml")
}

ktlint {
    version = "0.22.0"
    verbose = true
    android = true
    disabledRules = ["no-wildcard-imports", "package-name"]
}

dependencies {
    // Hilt
    implementation "androidx.hilt:hilt-navigation-fragment:$hilt_navigation_fragment_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_core_version"

    // Compat
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.core:core-splashscreen:$core_splashscreen_version"
    api "androidx.legacy:legacy-support-v4:$legacy_support_v4_version"
    api "com.google.android.material:material:$material_version"
    api "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    // KTX
    api "androidx.core:core-ktx:$core_ktx_version"
    api "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_ktx_version"
    api "androidx.activity:activity-ktx:$activity_ktx_version"

    // Navigation
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Kotlinx serialization
    api "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"
    api "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"

    // Room
    api "androidx.room:room-runtime:$room_version"
    api "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // Tests
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ui_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
}